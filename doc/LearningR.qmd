---
title: "Reproducible document"
author: "Susanne Larsen"
format: html
---

-   Susanne Hamborg Larsen
-   Aarhus University and Aarhus University Hospital

```{r setup}
#| message: false
#| warning: false

library(tidyverse)
library(NHANES)
library(ggplot2)
nhanes_small <- read_csv(here::here("data/nhanes_small.csv"))
```

```{r}
nhanes_small <- nhanes_small %>%
  select(age, sex, bmi, diabetes, phys_active, bp_sys_ave, bp_dia_ave, education)

nhanes_small
```

# Table of results

```{r}
#| message: false
#| warning: false

nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  group_by(diabetes, education) %>%
  summarise(
    mean_age = mean(age, na.rm = TRUE),
    mean_bmi = mean(bmi, na.rm = TRUE)
  ) %>%
  ungroup() %>%
  knitr::kable(caption = "Mean values of age and BMI for each education and diabetes status")
```

# Prettier table

```{r}
#|echo: false
#|warning: false
#|message: false

nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  group_by(diabetes, education) %>%
  summarise(
    mean_age = mean(age, na.rm = TRUE),
    mean_bmi = mean(bmi, na.rm = TRUE)
  ) %>%
  ungroup() %>%
  mutate(
    # Task 2a.
    mean_age = round(mean_age, digits = 1),
    mean_bmi = round(mean_bmi, digits = 1),
    # Task 2b.
    education = str_to_sentence(education)
  ) %>%
  rename(
    # Task 3.
    "Diabetes status" = diabetes,
    "Education" = education,
    "Mean Age" = mean_age,
    "Mean BMI" = mean_bmi
  ) %>%
  knitr::kable(caption = "Mean values of Age and BMI for each education and diabetes status.")
```

# Intro

**This** is the *introduction*

# Methods and Results

**Here are** the methods and *results*

## Analysis

Here is **the** statistical *analysis*

```{r}
2 + 2
```

# Discussion

And finally, this is **the** *discussion*

# Picture exercise

Cute dogs in @fig-dogs

![Cute puppies](images/cute_dog.png){#fig-dogs width="50%" height="50%"}


# Graphs
Take an initial look at all your variables, to see the distribution.
Do one chunk for each graphs.

## Plot one continous variable (histogram, or density plot)
```{r}
#| fig-cap: "Distribution of BMI"
#| label: fig-bmi-histo    # for at kunne referere til denne et andet sted i dokumentet. Nummer skifter ift hele dokumentet
#| message: FALSE

nhanes_small %>%
  filter(bmi <= 60) %>%
  ggplot(aes(x = bmi)) +
  geom_histogram(na.rm = TRUE)
```


## Plot a discrete variable (has a natural order, whereas a categorical variable has no order (e.g. Region))
Use a barchart (do not use barplot for continous variables (e.g. with means))

```{r}
#| label: fig-diabetes-education
#| fig-cap: "Count of diabetes and education"
#| fig-subcap:      # use this because we have two figures, which each needs a
#| - "Number of those with different education"
#| - "Number of those with or without diabetes"
#| layout-ncol: 2
# make the two graphs next to each other instead of stacked above eachother (should choose nrow then)

nhanes_small %>%
  filter(!is.na(education)) %>%
  ggplot(aes(x = education)) +
  geom_bar()

nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = diabetes)) + # cannot add na.rm = F with a discrete variable, so filter NA's out instead
  geom_bar()
```


## Plot two continous variables:

### geom_hex  (can replace geom_point, when you have very large datasets - you can more easily see where there a many observations (becomes darker))
```{r}
nhanes_small %>%
  ggplot(aes(x = bmi, y = bp_sys_ave)) +
  geom_hex(na.rm = TRUE) +
  geom_smooth(na.rm = TRUE) # adds a regression line
```

### Plotting two discrete variables

```{r}
nhanes_small %>%
  filter(!is.na(education), !is.na(diabetes)) %>%
  ggplot(aes(x = diabetes, fill = education)) +
  geom_bar(position = position_dodge()) # next to eachother instead of on top of eachother
```

### Plotting discrete and continous variables 

```{r}
nhanes_small %>%
  filter(!is.na(diabetes), bmi <= 60) %>% # need to remove NA's like this for the discrete variable
  ggplot(aes(x = diabetes, y = bmi)) +
  geom_violin(na.rm = TRUE) # removes the NA's for the continous variables
```

## Exercise to make plots with one or two variables
### Q1

```{r}
library(NHANES)

nhanes_exercise <- NHANES %>%
  rename_with(snakecase::to_snake_case) %>%
  rename(sex = gender)
```

### Q2
```{r}
#| label: fig-age-agediabetes
#| layout-ncol: 2
#| fig-cap: "distribution of age and distribution of age at onset of diabetes"
#| fig-subcap:
#|   - "Distribution of age"
#|   - "Distribution of age at onset of diabetes"

# Distribution of age
nhanes_exercise %>%
  ggplot(aes(x = age)) +
  geom_density(na.rm = TRUE)

# Distribution of age at diabetes diagnosis
nhanes_exercise %>%
  ggplot(aes(x = diabetes_age)) +
  geom_density(na.rm = TRUE)
```

### Q3
```{r}
#| label: fig-smokenow
#| fig-cap: "Number of current smokers among people above 20 years of age"

# Number of people who smoke now and are or above 20 years of age,
# removing those with missing smoking status.
nhanes_exercise %>%
  filter(age >= 20, !is.na(smoke_now)) %>%
  ggplot(aes(x = smoke_now)) +
  geom_bar()
```

### Q4
```{r}
# BMI in relation to mean arterial pressure
nhanes_exercise %>%
  mutate(mean_arterial_pressure = (bp_sys_ave + (2 * bp_dia_ave)) / 3) %>%
  ggplot(aes(x = bmi, y = mean_arterial_pressure)) +
  geom_hex(na.rm = TRUE) +
  geom_smooth(na.rm = TRUE)
```


## Plotting more than 2 variables

### Plotting 3 variables (1 continous and 2 discrete)

```{r}
nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  ggplot(aes(x = education, y = bp_sys_ave, colour = diabetes)) +
  geom_boxplot(na.rm = TRUE)
```

### 3 continous variables

```{r}
nhanes_small %>%
  ggplot(aes(x = bmi, y = bp_sys_ave, colour = age)) +
  geom_point(na.rm = TRUE)
```
### 2 continous and 1 discrete

```{r}
nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = bmi, y = bp_sys_ave, colour = diabetes)) +
  geom_point(na.rm = TRUE)
```
### Facetting

```{r}
nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = bmi, y = bp_sys_ave)) +
  geom_point(na.rm = TRUE) +
  facet_grid(cols = vars(diabetes))
# cols meaning we want to place them next to each other,
# vars = we want to split them based on the variable diabetes
```

### 5 variables 

```{r}

nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  ggplot(aes(x = bmi, y = bp_sys_ave, colour = age)) +
  geom_point(na.rm = TRUE) +
  facet_grid(
    rows = vars(diabetes),
    cols = vars(education)
  )
```
